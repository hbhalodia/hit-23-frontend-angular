{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Custom_input/Custom_input.component.ts","webpack:///src/app/Custom_input/Custom_input.component.html","webpack:///src/app/ang-basics/ang-basics.component.ts","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/auth-interceptor.service.ts","webpack:///src/app/authentication/auth.guard.ts","webpack:///src/app/authentication/auth.service.ts","webpack:///src/app/authentication/error-interceptor.service.ts","webpack:///src/app/authentication/login-page/login.component.ts","webpack:///src/app/authentication/login-page/login.component.html","webpack:///src/app/authentication/logout-page/logout-page.component.ts","webpack:///src/app/authentication/logout-page/logout-page.component.html","webpack:///src/app/authentication/sign-up/signup.component.ts","webpack:///src/app/authentication/sign-up/signup.component.html","webpack:///src/app/autocomplete/autocomplete.component.ts","webpack:///src/app/autocomplete/autocomplete.component.html","webpack:///src/app/check-box/check-box.component.ts","webpack:///src/app/check-box/check-box.component.html","webpack:///src/app/drop-down-menu/drop-down-menu.component.ts","webpack:///src/app/drop-down-menu/drop-down-menu.component.html","webpack:///src/app/error-popup/error-popup.component.ts","webpack:///src/app/error-popup/error-popup.component.html","webpack:///src/app/login-form-basics/login-form-basics.component.ts","webpack:///src/app/login-form-basics/login-form-basics.component.html","webpack:///src/app/manage-names.service.ts","webpack:///src/app/new-student/new-student.component.ts","webpack:///src/app/new-student/new-student.component.html","webpack:///src/app/radio-button/radio-button.component.ts","webpack:///src/app/radio-button/radio-button.component.html","webpack:///src/app/students/students.component.ts","webpack:///src/app/students/students.component.html","webpack:///src/app/students/dialog-content-example-dialog.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomInputComponent","selector","templateUrl","styleUrls","AngBasicsComponent","nameService","name","names","userInput","rUserInput","students","getNames","subscribe","data","window","alert","console","log","push","splice","index","indexOf","AngularMaterial","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","authService","title","isAuthenticated","autoLogin","getAuthenticated","customNotifierOptions","position","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","enabled","show","preset","speed","easing","hide","offset","shift","overlap","AppModule","provide","useClass","multi","withConfig","declarations","bootstrap","AuthInterceptor","authservice","next","clonedReq","clone","headers","set","getToken","handle","AuthGuard","router","route","state","isAuth","navigate","providedIn","AuthService","http","notifier","userid","token","getAuthLocally","userId","email","password","signUpObj","post","AUTH_BASE_PATH","loginObj","setToken","setid","setAuthenticated","deRegisterLogoutTimer","clearStorage","localStorage","setItem","expireAt","toString","getItem","Date","removeItem","now","expiryTime","getTime","registerLogoutTimer","result","expiresIn","authobj","saveAuthLocally","notify","timerHandler","setTimeout","onLogout","clearTimeout","ErrorInterceptor","dialog","pipe","error","open","height","width","LoginComponent","isLoading","form","invalid","onLogin","value","postLoginActivity","resetForm","LogoutPageComponent","SignupComponent","pass","doSignUp","onSignUp","AutocompleteComponent","myControl","options","filteredOptions","valueChanges","_filter","filterValue","toLowerCase","filter","option","CheckBoxComponent","checked","DropDownMenuComponent","foods","viewValue","disableSelect","ErrorPopupComponent","JSON","stringify","LoginFormBasicsComponent","namee","address","number","onButtonClicked","ManageNamesService","get","API_BASE_PATH","currPageSize","currPageIndex","url","branch","studentObj","creator","std","put","NewStudentComponent","isShow","mode","stdId","paramMap","has","getstudent","studentForm","addStudents","response","updateStudent","onSave","RadioButtonComponent","favoriteSeason","seasons","StudentsComponent","panelOpenState","isDel","istr","pageLength","pageOptions","getStudents","maxStudents","dialogRef","DialogContentExampleDialog","afterClosed","onDelete","deleteStudent","pageEvn","pageSize","pageIndex","student_creator_id","user_authid_login","getid","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, Input} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n    selector: 'Custom_input',\r\n    templateUrl:'./Custom_input.component.html', \r\n    styleUrls: ['./Custom_input.component.css']\r\n    //template :'<h1>Hello world</h1>'\r\n})\r\n\r\nexport class CustomInputComponent{\r\n    @Input('input-label') label;\r\n\r\n\r\n}","<mat-form-field>\r\n    <!--string Interpolation-->\r\n    <mat-label>{{label}}</mat-label>\r\n    <input matInput >\r\n</mat-form-field>\r\n<!--<br>\r\n<br>\r\n<br>\r\n\r\n<mat-checkbox>Check me!</mat-checkbox>\r\n<br>\r\n<br>\r\n<label id=\"example-radio-group-label\">Pick your favorite season</label>\r\n<br>\r\n<mat-radio-group\r\n  aria-labelledby=\"example-radio-group-label\"\r\n  class=\"example-radio-group\"\r\n  [(ngModel)]=\"favoriteSeason\">\r\n  <br>\r\n  <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n    {{season}}\r\n  </mat-radio-button>\r\n  <br>\r\n</mat-radio-group>\r\n<br>\r\n<div>Your favorite season is: {{favoriteSeason}}</div>\r\n-->\r\n\r\n\r\n<br>\r\n<br>\r\n<br>\r\n<!--\r\n<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input type=\"text\"\r\n             placeholder=\"Pick one\"\r\n             aria-label=\"Number\"\r\n             matInput\r\n             [formControl]=\"myControl\"\r\n             [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  </form>-->","import { Component, OnInit } from '@angular/core';\nimport { ManageNamesService } from '../manage-names.service';\n\n@Component({\n  selector: 'app-ang-basics',\n  templateUrl: './ang-basics.component.html',\n  styleUrls: ['./ang-basics.component.css']\n})\nexport class AngBasicsComponent implements OnInit {\n  name = '';\n\n  names = [];\n  userInput = '';\n  rUserInput = '';\n  students=[];\n  constructor(private nameService : ManageNamesService) {}\n\n  ngOnInit(): void {\n    // console.log('ngOnInit is called...');\n    this.nameService.getNames().subscribe(data => this.students=data);\n   }\n\n  // getStudentNames() {\n  //   return this.nameService.getNames();\n  // }\n\n  onSubmit() {\n    window.alert('Button clicked: ' + this.name);\n    console.log('Hello ');\n  }\n\n\n  onClick() {\n    this.names.push(this.userInput);\n    // to add name at specific index\n    this.names.splice(2, 0, this.userInput);\n  }\n\n  remove() {\n    let index = this.names.indexOf(this.rUserInput);\n    if (index !== -1) {\n      this.names.splice(index, 1);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatProgressSpinnerModule,\r\n        MatIconModule,    \r\n        MatRadioModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatSelectModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatExpansionModule\r\n\r\n    ]\r\n})\r\n\r\nexport class AngularMaterial {\r\n\r\n}","import { student } from './sudent';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentsComponent } from './students/students.component';\nimport { NewStudentComponent } from './new-student/new-student.component';\nimport { LoginComponent } from './authentication/login-page/login.component';\nimport { SignupComponent } from './authentication/sign-up/signup.component';\nimport { AuthGuard } from './authentication/auth.guard';\nimport { LogoutPageComponent } from './authentication/logout-page/logout-page.component';\n\nconst routes: Routes = [\n  { path: 'student', component: StudentsComponent},\n  { path: 'create', component: NewStudentComponent ,  canActivate: [AuthGuard]},\n  { path: 'edit/:stdId', component: NewStudentComponent,  canActivate: [AuthGuard]  },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'logout', component : LogoutPageComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './authentication/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';/*\n  names = ['Jayesh', 'Kod Factory', 'Marwadi', 'Rajkot', 'New value'];\n  labells=['Enter your Name','Enter your Email','Enter your Address','Enter your Number'];\n  //values = [25,55,30,35,40,45,60,78,90,10]\n  userInput = '';\n  rUserInput = '';\n  studata: Array<Object> = [\n    {name: 'Hit', marks: 99},\n    {name: 'Meet', marks: 89},\n    {name: 'Soham', marks: 79},\n    {name: 'ayush', marks: 93},\n    {name: 'karan', marks: 74},\n    {name: 'Smit', marks: 65},\n    {name: 'Yash B', marks: 34},\n    {name: 'Neev', marks: 69},\n    {name: 'Abhi', marks: 54},\n    {name: 'Darshit', marks: 70},\n];\n  onClick() {\n    this.names.splice(2,0,this.userInput)\n    // this.names.push(this.userInput)\n  }\n\n  remove() {\n    let index = this.names.indexOf(this.rUserInput)\n    if (index != -1) {\n      this.names.splice(index, 1)\n    }\n  }*/\n  //show: boolean = true;\n\n  isAuthenticated : boolean =false;\n\n  constructor(private authService : AuthService){}\n  ngOnInit(){\n    this.authService.autoLogin()\n  }\n  checkAuth() {\n    return this.authService.getAuthenticated()\n  }\n}\n","<mat-toolbar style =\"margin-bottom: 30px;\"color=\"warn\">\n  <div class=\"header-items\">\n    <a  mat-raised-button color=\"accent\" routerLink=\"student\">Students</a>\n  </div>\n  <ul>\n    <li *ngIf=\"checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"create\">New Student</a>\n    </li>\n    <li *ngIf=\"!checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"login\">Login</a>\n    </li>\n    <li *ngIf=\"!checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"signup\">Sign Up</a>\n    </li>\n    <li *ngIf=\"checkAuth();\">\n      <a mat-raised-button routerLink=\"logout\" color=\"accent\" >Logout</a>\n    </li>\n  </ul>\n</mat-toolbar>\n\n<main>\n  <router-outlet></router-outlet>\n  <notifier-container></notifier-container>\n</main>\n<!--\n<app-radio-button></app-radio-button>\n<br>\n<br>\n<br>\n<br>\n<app-check-box></app-check-box>\n<br>\n<br>\n<br>\n<app-autocomplete></app-autocomplete>\n<br><br><br>\n<app-drop-down-menu></app-drop-down-menu>-->\n<!--<app-login-form-basics></app-login-form-basics>_-->\n<!--<app-ang-basics></app-ang-basics>-->\n<!--\n<p>Lets try to reuse this componernt</p>\n-->\n<!--<app-ang-basics></app-ang-basics>-->\n<!--\n<div class=\"main-container\">\n   String Interpolation\n    <Custom_input *ngFor=\"let lab of labells \" input-label={{lab}}></Custom_input>\n    <br>\n</div>\n\n<input type=\"text\" [(ngModel)]=\"userInput\">\n<button (click)=\"onClick()\"> Add</button>\n<br>\n<br>\n<br>\n<input type=\"text\" [(ngModel)]=\"rUserInput\">\n<button (click)=\"remove()\">Remove</button>\n<br>                                                    \n<br>\n\n<ul *ngFor=\"let name of names\">\n  <li *ngIf=\"name == 'Rajkot'\" >{{name}}</li>\n</ul>\n\n\n<ul *ngFor=\"let data of studata\">\n  <li *ngIf=\"data.marks > 70 || data.marks ==70\">\n    {{data.name}} [{{data.marks}}]\n  </li>\n</ul>\n-->\n<!--\n<div class=\"main-container\">\n  <button (click)=\"show = !show\">{{ show ? \"hide\" : \"show\" }}</button>\n  <p [ngClass]=\"{ 'green': show, 'red': !show }\">show = {{ show }}</p>\n  <br />\n \n  <div *ngIf=\"show; else elseBlock\">Text to show</div>\n\n  <ng-template #elseBlock>\n    Alternate text while primary text is hidden\n  </ng-template>\n</div>\n\n-->\n","import { AngularMaterial } from './angular-material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { StudentsComponent, DialogContentExampleDialog } from './students/students.component';\nimport { LoginFormBasicsComponent } from './login-form-basics/login-form-basics.component';\nimport { AngBasicsComponent } from './ang-basics/ang-basics.component';\nimport { AppComponent } from './app.component';\nimport { CustomInputComponent } from './Custom_input/Custom_input.component';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckBoxComponent } from './check-box/check-box.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { DropDownMenuComponent } from './drop-down-menu/drop-down-menu.component';\nimport { NewStudentComponent } from './new-student/new-student.component';\nimport { LoginComponent } from './authentication/login-page/login.component';\nimport { SignupComponent } from './authentication/sign-up/signup.component';\nimport { ErrorPopupComponent } from './error-popup/error-popup.component';\n\nimport { AuthInterceptor } from './authentication/auth-interceptor.service';\nimport { ErrorInterceptor } from './authentication/error-interceptor.service';\nimport { LogoutPageComponent } from './authentication/logout-page/logout-page.component';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\n\n\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n\t\thorizontal: {\n\t\t\tposition: 'left',\n\t\t\tdistance: 12\n\t\t},\n\t\tvertical: {\n\t\t\tposition: 'bottom',\n\t\t\tdistance: 12,\n\t\t\tgap: 10\n\t\t}\n\t},\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AngBasicsComponent,\n    CustomInputComponent,\n    LoginFormBasicsComponent,\n    StudentsComponent,\n    AutocompleteComponent,\n    CheckBoxComponent,\n    RadioButtonComponent,\n    DropDownMenuComponent,\n    NewStudentComponent,\n    DialogContentExampleDialog,\n    LoginComponent,\n    SignupComponent,\n    ErrorPopupComponent,\n    LogoutPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AngularMaterial,\n    NotifierModule.withConfig(customNotifierOptions)  \n  ],\n  providers: [\n    { provide : HTTP_INTERCEPTORS,useClass : AuthInterceptor,multi : true },\n    { provide : HTTP_INTERCEPTORS,useClass : ErrorInterceptor,multi : true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n\r\n    constructor(private authservice : AuthService ){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler ){\r\n        \r\n        const clonedReq = req.clone({\r\n            headers : req.headers.set(\"Authorization\",\"Bearer \"+this.authservice.getToken())\r\n        })\r\n        return next.handle(clonedReq);\r\n    }\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService,  private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot):\r\n    boolean | import(\"@angular/router\").UrlTree |\r\n    import(\"rxjs\").Observable<boolean |\r\n    import(\"@angular/router\").UrlTree> |\r\n    Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n      const isAuth = this.authService.getAuthenticated();\r\n\r\n      if(!isAuth) {\r\n        console.log('User is not logged in');\r\n        this.router.navigate(['/login']);\r\n      }\r\n\r\n      return true;\r\n  }\r\n\r\n}\r\n","import { environment } from './../../environments/environment';\nimport { NotifierService } from 'angular-notifier';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { auth } from './auth.model';\nimport { DataSource } from '@angular/cdk/collections';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  private token : string;\n  private timerHandler : any;\n  private userid : string = \"\";\n  private isAuthenticated : boolean = false;\n  getToken(){\n    return this.token\n  }\n  setToken(token){\n    this.token=token\n  }\n\n  getAuthenticated() {\n    return this.isAuthenticated;\n  }\n\n  setAuthenticated(isAuthenticated: boolean) {\n    this.isAuthenticated = isAuthenticated;\n  }\n\n  /* get and set id function written by me */\n  getid(){\n    if(this.userid){\n      return this.userid;   \n    }\n    else{\n      return this.getAuthLocally().userId;\n    }\n  }\n\n  setid(userid){\n    this.userid = userid;\n  }\n  \n  \n  constructor(private http: HttpClient, private router : Router,private notifier : NotifierService) { }\n\n  doSignUp(email, password) {\n    const signUpObj: auth = {\n      id:null,\n      email: email,\n      password: password,\n      //creator : null\n    }\n    return this.http.post(environment.AUTH_BASE_PATH+\"signup\", signUpObj);\n  }\n\n  onLogin(email, password){\n    const loginObj: auth = {\n      id : null,\n      email: email,\n      password: password\n      }\n    return this.http.post<{message:string , token:string,expiresIn: number, /*written by me */ userId : string}>(environment.AUTH_BASE_PATH+\"Login\", loginObj);\n  }\n\n  onLogout() {\n    console.log(\"Logout occurs...\");\n    this.setToken(null);\n    this.setid(null)\n    this.setAuthenticated(false);\n    this.deRegisterLogoutTimer();\n    this.clearStorage();\n  }\n  \n  saveAuthLocally(data:any) {\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('expireAt', data.expireAt.toString());\n    localStorage.setItem('userId', data.userId)\n  }\n\n  getAuthLocally() {\n    return {\n      token: localStorage.getItem('token'),\n      expireAt: new Date(localStorage.getItem('expireAt')),\n      userId : localStorage.getItem('userId')\n    }\n  }\n\n  clearStorage() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expireAt');\n    localStorage.removeItem('userId');\n  }\n\n  autoLogin() {\n    const token = this.getAuthLocally().token;\n    const expireAt = this.getAuthLocally().expireAt;\n\n    if(token && expireAt) {\n      console.log(\"Doing auto login...\");\n      const now = new Date();\n      const expiryTime = expireAt.getTime() - now.getTime();\n      console.log()\n      if(expiryTime > 0) {\n        this.setAuthenticated(true);\n        this.setToken(token);\n        this.deRegisterLogoutTimer();\n        this.registerLogoutTimer(expiryTime/1000);\n      }\n    }\n  }\n\n  postLoginActivity(result){\n    this.setToken(result.token)\n      this.setAuthenticated(true)\n\n      this.setid(result.userId)    /* Written By me */\n      \n      const now = new Date();\n      const expireAt = new Date(now.getTime() + result.expiresIn * 1000);\n\n      const authobj = {\n        token : result.token,\n        expireAt : expireAt,\n        userId : result.userId\n      }\n      this.saveAuthLocally(authobj);\n      console.log(\"Token will expires at: \" + expireAt);\n\n      this.registerLogoutTimer(result.expiresIn);\n      this.notifier.notify('Success','Login Succesfull..')\n  }\n\n  registerLogoutTimer(expiresIn: number) {\n    console.log(\"Logout will occurs in : \"+ expiresIn * 1000)\n    this.timerHandler = setTimeout(() => {\n      this.onLogout();\n    }, expiresIn * 1000);\n  }\n  deRegisterLogoutTimer() {\n    clearTimeout(this.timerHandler);\n  }\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorPopupComponent } from '../error-popup/error-popup.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error : HttpErrorResponse) => {\r\n        // console.log(\"Error Catched: \" + JSON.stringify(error));\r\n        this.dialog.open(ErrorPopupComponent, {data: error, height: '200px',\r\n        width: '300px'});\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}","import { auth } from './../auth.model';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false\n\n\n  constructor(private authService:AuthService,private router : Router, private notifier : NotifierService) { }\n\n  ngOnInit(): void {\n        \n  }\n  onLogin(form: NgForm) {\n  \n    if(form.invalid){\n      return \n    } \n      this.isLoading=true \n      this.authService.onLogin(form.value.email, form.value.password).subscribe(result => {\n      console.log(result)\n      this.authService.postLoginActivity(result)\n      \n      this.router.navigate(['/student']);\n    }, error => {\n      this.isLoading = false;\n    })\n    form.resetForm()\n  }\n\n}\n","<mat-progress-bar *ngIf=\"isLoading\"></mat-progress-bar>\n<notifier-container></notifier-container>\n<mat-card class=\"card-container\">\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n    <mat-card-subtitle style=\"font-weight: bold ;text-align: center;\">Login</mat-card-subtitle>\n    <mat-form-field>\n      <input\n      type=\"email\"\n      name=\"email\"\n      ngModel\n      matInput\n      placeholder=\"E-mail\"\n      required\n      email\n      #name=\"ngModel\"\n      >\n      <mat-error *ngIf=\"name.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      name=\"password\"\n      ngModel\n      matInput\n      placeholder=\"Password\"\n      required\n      #password=\"ngModel\"\n      >\n      <mat-error *ngIf=\"password.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <mat-card-actions>\n      <button mat-raised-button type=\"submit\">Login</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout-page',\n  templateUrl: './logout-page.component.html',\n  styleUrls: ['./logout-page.component.css']\n})\nexport class LogoutPageComponent implements OnInit {\n\n  constructor( private authService : AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.onLogout();\n  }\n}\n","<h1 style=\"text-align: center; margin-top: 250px;\" >Logout Occurs...Click Below Link to Login</h1>\n<div  style=\"margin-left: 720px;\">\n\n    <a style=\"text-align: center;\" mat-raised-button color=\"primary\" [routerLink]=\"['/login']\">Login</a>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  isLoading = false;\n  constructor(private authService: AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n    \n  }\n  onSignUp(form: NgForm) {\n    if(form.invalid) {\n      return\n    }\n\n    console.log(form.value)\n    const email = form.value.email\n    const pass = form.value.password\n    this.authService.doSignUp(email,pass).subscribe(data => {\n      console.log(data)\n      this.authService.onLogin(email,pass).subscribe(result => {\n        this.authService.postLoginActivity(result)\n        this.router.navigate(['/students']);\n      })\n    });\n    form.resetForm()\n  }\n\n}\n","<mat-progress-bar *ngIf=\"isLoading\"></mat-progress-bar>\n<mat-card class=\"card-container\">\n  <form (submit)=\"onSignUp(signUpForm)\" #signUpForm=\"ngForm\">\n    <mat-card-subtitle style=\"font-weight: bold; text-align: center;\">Sign Up</mat-card-subtitle>\n    <mat-form-field>\n      <input\n      type=\"email\"\n      name=\"email\"\n      ngModel\n      matInput\n      placeholder=\"E-mail\"\n      required\n      email\n      #name=\"ngModel\"\n      >\n      <mat-error *ngIf=\"name.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      name=\"password\"\n      ngModel\n      matInput\n      placeholder=\"Password\"\n      required\n      #password=\"ngModel\"\n      >\n      <mat-error *ngIf=\"password.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <mat-card-actions>\n      <button mat-raised-button type=\"submit\">Sign Up</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutocompleteComponent implements OnInit {\n\n  myControl = new FormControl();\n  \n  options: string[] = ['One', 'Two', 'Three'];\n  \n  filteredOptions: Observable<string[]>;\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),map(value => this._filter(value))\n    );\n  }\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  \n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n           placeholder=\"Pick one\"\n           aria-label=\"Number\"\n           matInput\n           [formControl]=\"myControl\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{option}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box',\n  templateUrl: './check-box.component.html',\n  styleUrls: ['./check-box.component.css']\n})\nexport class CheckBoxComponent implements OnInit {\n  checked = true;\n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n\n}\n","<mat-checkbox>Check me!</mat-checkbox>\r\n<br>\r\n<br>\r\n<mat-checkbox [(ngModel)]=\"checked\">Checked</mat-checkbox>  ","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-drop-down-menu',\n  templateUrl: './drop-down-menu.component.html',\n  styleUrls: ['./drop-down-menu.component.css']\n})\nexport class DropDownMenuComponent implements OnInit {\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  disableSelect = new FormControl(false);\n}\n","\n<!--\n<mat-form-field>\n    <mat-label>Choose an option</mat-label>\n    <select matNativeControl [disabled]=\"disableSelect.value\">\n      <option value=\"\" selected></option>\n      <option value=\"volvo\">Volvo</option>\n      <option value=\"saab\"  >Saab</option>\n      <option value=\"mercedes\">Mercedes</option>\n      <option value=\"audi\">Audi</option>\n    </select>\n  </mat-form-field>-->\n<h4>Basic mat-select</h4>\n<mat-form-field>\n  <mat-label>Favorite food</mat-label>\n  <mat-select>\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n      {{food.viewValue}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-popup',\n  templateUrl: './error-popup.component.html',\n  styleUrls: ['./error-popup.component.css']\n})\nexport class ErrorPopupComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n    console.log(\"Error Config: \" + JSON.stringify(data))\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3> Error </h3>\n<p>{{data.error.message}}</p>\n<a *ngIf=\"data.status === 404\" mat-dialog-close routerLink=\"/signup\">Sign Up</a>\n<br/>\n<br/>\n<button mat-button mat-dialog-close>Close</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form-basics',\n  templateUrl: './login-form-basics.component.html',\n  styleUrls: ['./login-form-basics.component.css']\n})\nexport class LoginFormBasicsComponent implements OnInit {\n   namee='';\n   email='';\n   address='';\n   number='';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onButtonClicked()\n  {\n    \n    console.log(\"Name : \"+this.namee+\"\\nEmail :\"+this.email+\"\\nNumber : \"+this.number+\"\\nAddress : \"+this.address)\n    window.alert(\"Name : \"+this.namee+\"\\nEmail :\"+this.email+\"\\nNumber : \"+this.number+\"\\nAddress : \"+this.address)\n  }\n\n}\n","<p><br></p>\n<h1 style=\"text-align: center; font-size: 200%;\">Login Form </h1>\n<div style=\"text-align: center;\">\n    <br><br>\n    <p style=\"color: mediumblue;\">Enter Name : <input type=\"text\" [(ngModel)]=\"namee\" ></p>\n    <p style=\"color: mediumblue;\" >You have entered : {{namee}}</p>\n    <p style=\"color: red;\">Enter Email : <input type=\"text\" [(ngModel)]=\"email\" ></p>\n    <p style=\"color: red;\">You have entered : {{email}} </p>\n    <p style=\"color: firebrick;\">Enter Number : <input type=\"text\" [(ngModel)]=\"number\" ></p>\n    <p style=\"color: firebrick;\">You have entered : {{number}} </p>\n    <p style=\"color: fuchsia;\">Enter Address : <input type=\"text\" [(ngModel)]=\"address\" ></p>\n    <p style=\"color: fuchsia;\">You have entered : {{address}} </p>\n    <button (click) = \"onButtonClicked()\" style=\"color:yellow; background-color: green; font-size: 150%;\" > Submit</button>\n</div>\n<!--\n<form>\n    <div style=\"text-align: center;\">\n        <table align=\"center\">\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Name :</label>\n                </td>\n    \n                <td>\n                    \n                   \n                   \n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Email :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Email\"  >\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Number :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Number\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Address :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Address\" >\n                </td>\n            </tr>\n        </table>\n    </div>\n</form>\n-->\n<!--<br><br>\n        <label style=\"color:crimson;\"> Name :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> Email :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> Number :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> address :</label>\n        <input type=\"text\" >\n        <br><br>-->","import { environment } from '../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { student } from './sudent';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root' // This service will be available from root scope it means any component can inject it\n})\nexport class ManageNamesService {\n  //names = ['Jayesh', 'Kod Factory', 'Marwadi', 'Rajkot', 'from service'];\n\n  \n  constructor(private http: HttpClient) { }\n\n  getNames() : Observable<student[]> {\n    //return this.names;\n    return this.http.get<student[]>(environment.API_BASE_PATH+'student')\n  }\n\n  getStudents(currPageSize,currPageIndex){\n    const url = environment.API_BASE_PATH+'listStudents?pagesize='+currPageSize+'&pageindex='+currPageIndex\n    console.log(url)\n    return this.http.get<{message: string, students:student[], maxStudents : number}>(url)\n  }\n\n  addStudents(name,branch,email){\n    const studentObj : student = {\n      id: null,\n      name: name,\n      branch: branch,\n      email: email,\n      creator : null    /*written by me */\n    }\n    return this.http.post(environment.API_BASE_PATH+'addStudent', studentObj);\n  }\n\n  deleteStudent(id)\n  {\n      return this.http.delete(environment.API_BASE_PATH+id)\n  }\n  updateStudent(id, name, branch,email) {\n    const std = {\n      name: name,\n      branch: branch,\n      email:email\n    }\n    return this.http.put(environment.API_BASE_PATH+id, std)\n  }\n  getstudent(id){\n    return this.http.get<student>(environment.API_BASE_PATH+id)\n  }\n// updateNames(name) {\n   // this.names.push(name)\n  //}\n}","import { Component, OnInit } from '@angular/core';\nimport { student } from '../sudent';\nimport { ManageNamesService } from '../manage-names.service';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router'\n\n\n@Component({\n  selector: 'app-new-student',\n  templateUrl: './new-student.component.html',\n  styleUrls: ['./new-student.component.css']\n})\nexport class NewStudentComponent implements OnInit {\n  \n  name=\"\";\n  branch=\"\";\n  email=\"\";\n  isShow=false;\n  mode='create'\n  stdId = \"\"\n  std:student\n  \n  constructor(private  nameService: ManageNamesService,private route : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(data =>{\n      if(data.has('stdId')){\n          this.mode='edit'\n          this.stdId = data.get('stdId');\n          this.nameService.getstudent(this.stdId).subscribe(data => {\n            this.std=data\n          })\n      }else{\n        this.mode='create'\n        this.stdId= null\n      }\n    })\n  }\n  onSave(studentForm : NgForm) {\n    \n    if (studentForm.invalid) {\n      return\n    }\n    this.isShow=true;\n\n    if(this.mode == 'create') {\n      this.nameService.addStudents(studentForm.value.name, studentForm.value.branch,studentForm.value.email).subscribe(response => {\n        console.log(\"Api Success: \"+ JSON.stringify(response))\n      });\n    } else {\n      this.nameService.updateStudent(this.stdId, studentForm.value.name, studentForm.value.branch,studentForm.value.email).subscribe(response => {\n        console.log(\"Update Api Success: \"+ JSON.stringify(response))\n      });\n    }\n     setTimeout(() => \n      {\n          this.isShow = false\n      },\n      1000);\n    studentForm.resetForm()\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf = \"isShow\" ></mat-progress-bar>\n<mat-card class=\"card-container\">\n    <form (submit)=\"onSave(studentForm)\" #studentForm=\"ngForm\">\n      <mat-card-header class=\"card-header\">\n        <div mat-card-avatar class=\"header-avatar\"></div>\n        <mat-card-subtitle>Registration</mat-card-subtitle>\n      </mat-card-header>\n      <mat-form-field>\n        <input\n        type=\"text\"\n        name=\"name\"\n        [ngModel]=\"std?.name\"\n        matInput\n        placeholder=\"Enter name\"\n        required\n        #name=\"ngModel\"\n        >\n        <mat-error *ngIf=\"name.invalid\">Name is required</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        type=\"text\"\n        name=\"branch\"\n        [ngModel]=\"std?.branch\"\n        matInput\n        placeholder=\"Enter branch\"\n        required\n        #branch=\"ngModel\"\n        >\n        <mat-error *ngIf=\"branch.invalid\">branch is required</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        type=\"email\"\n        name=\"email\"\n        [ngModel]=\"std?.email\"\n        matInput\n        placeholder=\"Enter email\"\n        required\n        email\n        #email=\"ngModel\"\n        >\n        <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n      </mat-form-field>\n      <mat-card-actions>\n        <button mat-raised-button type=\"submit\">Save</button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.css']\n})\nexport class RadioButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  favoriteSeason: string='Summer';\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n","<label id=\"example-radio-group-label\">Pick your favorite season</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"favoriteSeason\">\n  <mat-radio-button  class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\n    {{season}}\n  </mat-radio-button>\n</mat-radio-group>\n<div>Your favorite season is: {{favoriteSeason}}</div>","import { Component, OnInit } from '@angular/core';\nimport { ManageNamesService } from '../manage-names.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from '../authentication/auth.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  students = [];\n  panelOpenState = false;\n  isDel=false;\n  istr=true;\n\n  private user_authid_login: string\n  private authen : boolean\n  constructor(private nameService: ManageNamesService,public dialog: MatDialog,private authService: AuthService) { }\n  \n\n  pageLength = 1;\n  currPageSize = 2;\n  pageOptions = [1,2,5,10]\n  currPageIndex=0\n\n\n\n  ngOnInit(): void {\n\n      this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n        console.log(JSON.stringify(data))\n        this.students=data.students;\n        this.pageLength=data.maxStudents;\n        console.log(this.pageLength);\n      });\n  }\n\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if(result==true){\n        this.onDelete(id)\n      }else{\n        this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n        this.students=data.students;\n        this.pageLength=data.maxStudents;\n        });\n      }\n    });\n  }\n  \n\n\n  onDelete(id)\n  {\n    this.isDel=true;\n    this.nameService.deleteStudent(id).subscribe(data => { \n      console.log(data)\n      setTimeout(() => \n      {\n          this.isDel = false\n      },\n      1000);\n      this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n          this.students=data.students;\n        this.pageLength=data.maxStudents;\n        \n        });\n    });\n    \n  }\n  onPageChange(pageEvn: PageEvent) {\n    console.log(pageEvn);\n    this.currPageSize=pageEvn.pageSize\n    this.currPageIndex=pageEvn.pageIndex\n    this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n      this.students=data.students;\n      this.pageLength=data.maxStudents;\n    });\n\n    \n    /*length: 10\n    pageIndex: 1\n    pageSize: 2\n    previousPageIndex: 0*/\n  }\n  checkAuth() {\n    return this.authService.getAuthenticated();\n    \n  }\n\n  checkcreatorid_studentid(student_creator_id){\n    this.user_authid_login = this.authService.getid();    /* written by me */\n\n    /* if and else condition written by me */\n\n    if((this.user_authid_login===student_creator_id)){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n}\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog {}","<mat-spinner *ngIf = \"isDel\"   mode=\"indeterminate\" style=\"margin: auto; margin-bottom: 10px;\"  ></mat-spinner>\n\n\n<div *ngIf = \"students.length > 0 ; else noData\">\n  <mat-accordion>\n  <mat-expansion-panel style=\"margin-bottom: 10px; margin-top: 10px;\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"align-content: center;\">\n        Data Of Students\n      </mat-panel-title>\n      <mat-panel-description>\n        <p *ngIf=\"panelOpenState; else elseBlock\"></p>\n        <ng-template #elseBlock> </ng-template>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n  <mat-accordion>\n    <mat-expansion-panel style=\"margin-bottom: 10px;\" *ngFor=\"let item of students\" (opened)=\"panelOpenState = true\"\n                                  (closed)=\"panelOpenState = false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Student : {{item.name}}\n        </mat-panel-title>\n        <mat-panel-description>\n          <p *ngIf=\"panelOpenState; else elseBlock\">Click to Hide {{item.name}} data</p>\n          <ng-template #elseBlock>Click here to see {{item.name}} data</ng-template>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Name: {{item.name}}</p>\n      <p>Branch: {{item.branch}}</p>\n      <p>Email : {{item.email}}</p>\n      <mat-action-row *ngIf=\"checkAuth() &&  checkcreatorid_studentid(item.creator)\">\n        <div class=\"example-button-container\" style=\"margin-right:40%;\" >\n          <button mat-fab color=\"accent\" [routerLink]=\"['/edit',item._id]\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;margin-right: 10%;\">\n            <mat-icon> border_color</mat-icon>\n          </button>\n          <!--\n          <button (click)=\"onDelete(item._id)\"  mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;\">\n            <mat-icon>delete</mat-icon>\n          </button>\n          -->\n          <button mat-button (click)=\"openDialog(item._id)\"  mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;\">  \n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n      </mat-action-row>\n    </mat-expansion-panel>\n    <mat-paginator\n    [length]=\"pageLength\"\n    [pageSize]=\"currPageSize\"\n    [pageSizeOptions]=\"pageOptions\"\n    (page)=\"onPageChange($event)\">\n  </mat-paginator>\n  </mat-accordion>\n  </mat-expansion-panel>\n  \n  </mat-accordion>\n</div>\n<ng-template #noData>\n  <h1 style=\"text-align: center; margin-top: 250px;\"> Do Not Have Any Data!!!Please Insert It First... </h1>\n</ng-template>","<h2 mat-dialog-title>Confirm This Page</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <h3>Want To Delete  This Student Data </h3>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>Cancel</button>\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Delete</button>\r\n</mat-dialog-actions>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_BASE_PATH : \"https://hit-23-node-crm-backend.herokuapp.com/api/\",\n  AUTH_BASE_PATH :\"https://hit-23-node-crm-backend.herokuapp.com/auth/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}