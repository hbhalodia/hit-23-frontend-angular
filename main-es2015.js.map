{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Custom_input/Custom_input.component.ts","./src/app/Custom_input/Custom_input.component.html","./src/app/ang-basics/ang-basics.component.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/auth-interceptor.service.ts","./src/app/authentication/auth.guard.ts","./src/app/authentication/auth.service.ts","./src/app/authentication/error-interceptor.service.ts","./src/app/authentication/login-page/login.component.ts","./src/app/authentication/login-page/login.component.html","./src/app/authentication/logout-page/logout-page.component.ts","./src/app/authentication/logout-page/logout-page.component.html","./src/app/authentication/sign-up/signup.component.ts","./src/app/authentication/sign-up/signup.component.html","./src/app/autocomplete/autocomplete.component.ts","./src/app/autocomplete/autocomplete.component.html","./src/app/check-box/check-box.component.ts","./src/app/check-box/check-box.component.html","./src/app/drop-down-menu/drop-down-menu.component.ts","./src/app/drop-down-menu/drop-down-menu.component.html","./src/app/error-popup/error-popup.component.ts","./src/app/error-popup/error-popup.component.html","./src/app/login-form-basics/login-form-basics.component.ts","./src/app/login-form-basics/login-form-basics.component.html","./src/app/manage-names.service.ts","./src/app/new-student/new-student.component.ts","./src/app/new-student/new-student.component.html","./src/app/radio-button/radio-button.component.ts","./src/app/radio-button/radio-button.component.html","./src/app/students/students.component.ts","./src/app/students/students.component.html","./src/app/students/dialog-content-example-dialog.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, Input} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n    selector: 'Custom_input',\r\n    templateUrl:'./Custom_input.component.html', \r\n    styleUrls: ['./Custom_input.component.css']\r\n    //template :'<h1>Hello world</h1>'\r\n})\r\n\r\nexport class CustomInputComponent{\r\n    @Input('input-label') label;\r\n\r\n\r\n}","<mat-form-field>\r\n    <!--string Interpolation-->\r\n    <mat-label>{{label}}</mat-label>\r\n    <input matInput >\r\n</mat-form-field>\r\n<!--<br>\r\n<br>\r\n<br>\r\n\r\n<mat-checkbox>Check me!</mat-checkbox>\r\n<br>\r\n<br>\r\n<label id=\"example-radio-group-label\">Pick your favorite season</label>\r\n<br>\r\n<mat-radio-group\r\n  aria-labelledby=\"example-radio-group-label\"\r\n  class=\"example-radio-group\"\r\n  [(ngModel)]=\"favoriteSeason\">\r\n  <br>\r\n  <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n    {{season}}\r\n  </mat-radio-button>\r\n  <br>\r\n</mat-radio-group>\r\n<br>\r\n<div>Your favorite season is: {{favoriteSeason}}</div>\r\n-->\r\n\r\n\r\n<br>\r\n<br>\r\n<br>\r\n<!--\r\n<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input type=\"text\"\r\n             placeholder=\"Pick one\"\r\n             aria-label=\"Number\"\r\n             matInput\r\n             [formControl]=\"myControl\"\r\n             [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  </form>-->","import { Component, OnInit } from '@angular/core';\nimport { ManageNamesService } from '../manage-names.service';\n\n@Component({\n  selector: 'app-ang-basics',\n  templateUrl: './ang-basics.component.html',\n  styleUrls: ['./ang-basics.component.css']\n})\nexport class AngBasicsComponent implements OnInit {\n  name = '';\n\n  names = [];\n  userInput = '';\n  rUserInput = '';\n  students=[];\n  constructor(private nameService : ManageNamesService) {}\n\n  ngOnInit(): void {\n    // console.log('ngOnInit is called...');\n    this.nameService.getNames().subscribe(data => this.students=data);\n   }\n\n  // getStudentNames() {\n  //   return this.nameService.getNames();\n  // }\n\n  onSubmit() {\n    window.alert('Button clicked: ' + this.name);\n    console.log('Hello ');\n  }\n\n\n  onClick() {\n    this.names.push(this.userInput);\n    // to add name at specific index\n    this.names.splice(2, 0, this.userInput);\n  }\n\n  remove() {\n    let index = this.names.indexOf(this.rUserInput);\n    if (index !== -1) {\n      this.names.splice(index, 1);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatProgressSpinnerModule,\r\n        MatIconModule,    \r\n        MatRadioModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatSelectModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatExpansionModule\r\n\r\n    ]\r\n})\r\n\r\nexport class AngularMaterial {\r\n\r\n}","import { student } from './sudent';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentsComponent } from './students/students.component';\nimport { NewStudentComponent } from './new-student/new-student.component';\nimport { LoginComponent } from './authentication/login-page/login.component';\nimport { SignupComponent } from './authentication/sign-up/signup.component';\nimport { AuthGuard } from './authentication/auth.guard';\nimport { LogoutPageComponent } from './authentication/logout-page/logout-page.component';\n\nconst routes: Routes = [\n  { path: 'student', component: StudentsComponent},\n  { path: 'create', component: NewStudentComponent ,  canActivate: [AuthGuard]},\n  { path: 'edit/:stdId', component: NewStudentComponent,  canActivate: [AuthGuard]  },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'logout', component : LogoutPageComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './authentication/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';/*\n  names = ['Jayesh', 'Kod Factory', 'Marwadi', 'Rajkot', 'New value'];\n  labells=['Enter your Name','Enter your Email','Enter your Address','Enter your Number'];\n  //values = [25,55,30,35,40,45,60,78,90,10]\n  userInput = '';\n  rUserInput = '';\n  studata: Array<Object> = [\n    {name: 'Hit', marks: 99},\n    {name: 'Meet', marks: 89},\n    {name: 'Soham', marks: 79},\n    {name: 'ayush', marks: 93},\n    {name: 'karan', marks: 74},\n    {name: 'Smit', marks: 65},\n    {name: 'Yash B', marks: 34},\n    {name: 'Neev', marks: 69},\n    {name: 'Abhi', marks: 54},\n    {name: 'Darshit', marks: 70},\n];\n  onClick() {\n    this.names.splice(2,0,this.userInput)\n    // this.names.push(this.userInput)\n  }\n\n  remove() {\n    let index = this.names.indexOf(this.rUserInput)\n    if (index != -1) {\n      this.names.splice(index, 1)\n    }\n  }*/\n  //show: boolean = true;\n\n  isAuthenticated : boolean =false;\n\n  constructor(private authService : AuthService){}\n  ngOnInit(){\n    this.authService.autoLogin()\n  }\n  checkAuth() {\n    return this.authService.getAuthenticated()\n  }\n}\n","<mat-toolbar style =\"margin-bottom: 30px;\"color=\"warn\">\n  <div class=\"header-items\">\n    <a  mat-raised-button color=\"accent\" routerLink=\"student\">Students</a>\n  </div>\n  <ul>\n    <li *ngIf=\"checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"create\">New Student</a>\n    </li>\n    <li *ngIf=\"!checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"login\">Login</a>\n    </li>\n    <li *ngIf=\"!checkAuth();\">\n      <a mat-raised-button color=\"accent\" routerLink=\"signup\">Sign Up</a>\n    </li>\n    <li *ngIf=\"checkAuth();\">\n      <a mat-raised-button routerLink=\"logout\" color=\"accent\" >Logout</a>\n    </li>\n  </ul>\n</mat-toolbar>\n\n<main>\n  <router-outlet></router-outlet>\n  <notifier-container></notifier-container>\n</main>\n<!--\n<app-radio-button></app-radio-button>\n<br>\n<br>\n<br>\n<br>\n<app-check-box></app-check-box>\n<br>\n<br>\n<br>\n<app-autocomplete></app-autocomplete>\n<br><br><br>\n<app-drop-down-menu></app-drop-down-menu>-->\n<!--<app-login-form-basics></app-login-form-basics>_-->\n<!--<app-ang-basics></app-ang-basics>-->\n<!--\n<p>Lets try to reuse this componernt</p>\n-->\n<!--<app-ang-basics></app-ang-basics>-->\n<!--\n<div class=\"main-container\">\n   String Interpolation\n    <Custom_input *ngFor=\"let lab of labells \" input-label={{lab}}></Custom_input>\n    <br>\n</div>\n\n<input type=\"text\" [(ngModel)]=\"userInput\">\n<button (click)=\"onClick()\"> Add</button>\n<br>\n<br>\n<br>\n<input type=\"text\" [(ngModel)]=\"rUserInput\">\n<button (click)=\"remove()\">Remove</button>\n<br>                                                    \n<br>\n\n<ul *ngFor=\"let name of names\">\n  <li *ngIf=\"name == 'Rajkot'\" >{{name}}</li>\n</ul>\n\n\n<ul *ngFor=\"let data of studata\">\n  <li *ngIf=\"data.marks > 70 || data.marks ==70\">\n    {{data.name}} [{{data.marks}}]\n  </li>\n</ul>\n-->\n<!--\n<div class=\"main-container\">\n  <button (click)=\"show = !show\">{{ show ? \"hide\" : \"show\" }}</button>\n  <p [ngClass]=\"{ 'green': show, 'red': !show }\">show = {{ show }}</p>\n  <br />\n \n  <div *ngIf=\"show; else elseBlock\">Text to show</div>\n\n  <ng-template #elseBlock>\n    Alternate text while primary text is hidden\n  </ng-template>\n</div>\n\n-->\n","import { AngularMaterial } from './angular-material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { StudentsComponent, DialogContentExampleDialog } from './students/students.component';\nimport { LoginFormBasicsComponent } from './login-form-basics/login-form-basics.component';\nimport { AngBasicsComponent } from './ang-basics/ang-basics.component';\nimport { AppComponent } from './app.component';\nimport { CustomInputComponent } from './Custom_input/Custom_input.component';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckBoxComponent } from './check-box/check-box.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { DropDownMenuComponent } from './drop-down-menu/drop-down-menu.component';\nimport { NewStudentComponent } from './new-student/new-student.component';\nimport { LoginComponent } from './authentication/login-page/login.component';\nimport { SignupComponent } from './authentication/sign-up/signup.component';\nimport { ErrorPopupComponent } from './error-popup/error-popup.component';\n\nimport { AuthInterceptor } from './authentication/auth-interceptor.service';\nimport { ErrorInterceptor } from './authentication/error-interceptor.service';\nimport { LogoutPageComponent } from './authentication/logout-page/logout-page.component';\nimport { NotifierModule, NotifierOptions } from 'angular-notifier';\n\n\n\nconst customNotifierOptions: NotifierOptions = {\n  position: {\n\t\thorizontal: {\n\t\t\tposition: 'left',\n\t\t\tdistance: 12\n\t\t},\n\t\tvertical: {\n\t\t\tposition: 'bottom',\n\t\t\tdistance: 12,\n\t\t\tgap: 10\n\t\t}\n\t},\n  theme: 'material',\n  behaviour: {\n    autoHide: 5000,\n    onClick: 'hide',\n    onMouseover: 'pauseAutoHide',\n    showDismissButton: true,\n    stacking: 4\n  },\n  animations: {\n    enabled: true,\n    show: {\n      preset: 'slide',\n      speed: 300,\n      easing: 'ease'\n    },\n    hide: {\n      preset: 'fade',\n      speed: 300,\n      easing: 'ease',\n      offset: 50\n    },\n    shift: {\n      speed: 300,\n      easing: 'ease'\n    },\n    overlap: 150\n  }\n};\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AngBasicsComponent,\n    CustomInputComponent,\n    LoginFormBasicsComponent,\n    StudentsComponent,\n    AutocompleteComponent,\n    CheckBoxComponent,\n    RadioButtonComponent,\n    DropDownMenuComponent,\n    NewStudentComponent,\n    DialogContentExampleDialog,\n    LoginComponent,\n    SignupComponent,\n    ErrorPopupComponent,\n    LogoutPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AngularMaterial,\n    NotifierModule.withConfig(customNotifierOptions)  \n  ],\n  providers: [\n    { provide : HTTP_INTERCEPTORS,useClass : AuthInterceptor,multi : true },\n    { provide : HTTP_INTERCEPTORS,useClass : ErrorInterceptor,multi : true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n\r\n    constructor(private authservice : AuthService ){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler ){\r\n        \r\n        const clonedReq = req.clone({\r\n            headers : req.headers.set(\"Authorization\",\"Bearer \"+this.authservice.getToken())\r\n        })\r\n        return next.handle(clonedReq);\r\n    }\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService,  private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot):\r\n    boolean | import(\"@angular/router\").UrlTree |\r\n    import(\"rxjs\").Observable<boolean |\r\n    import(\"@angular/router\").UrlTree> |\r\n    Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n      const isAuth = this.authService.getAuthenticated();\r\n\r\n      if(!isAuth) {\r\n        console.log('User is not logged in');\r\n        this.router.navigate(['/login']);\r\n      }\r\n\r\n      return true;\r\n  }\r\n\r\n}\r\n","import { environment } from './../../environments/environment';\nimport { NotifierService } from 'angular-notifier';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { auth } from './auth.model';\nimport { DataSource } from '@angular/cdk/collections';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  private token : string;\n  private timerHandler : any;\n  private userid : string = \"\";\n  private isAuthenticated : boolean = false;\n  getToken(){\n    return this.token\n  }\n  setToken(token){\n    this.token=token\n  }\n\n  getAuthenticated() {\n    return this.isAuthenticated;\n  }\n\n  setAuthenticated(isAuthenticated: boolean) {\n    this.isAuthenticated = isAuthenticated;\n  }\n\n  /* get and set id function written by me */\n  getid(){\n    if(this.userid){\n      return this.userid;   \n    }\n    else{\n      return this.getAuthLocally().userId;\n    }\n  }\n\n  setid(userid){\n    this.userid = userid;\n  }\n  \n  \n  constructor(private http: HttpClient, private router : Router,private notifier : NotifierService) { }\n\n  doSignUp(email, password) {\n    const signUpObj: auth = {\n      id:null,\n      email: email,\n      password: password,\n      //creator : null\n    }\n    return this.http.post(environment.AUTH_BASE_PATH+\"signup\", signUpObj);\n  }\n\n  onLogin(email, password){\n    const loginObj: auth = {\n      id : null,\n      email: email,\n      password: password\n      }\n    return this.http.post<{message:string , token:string,expiresIn: number, /*written by me */ userId : string}>(environment.AUTH_BASE_PATH+\"Login\", loginObj);\n  }\n\n  onLogout() {\n    console.log(\"Logout occurs...\");\n    this.setToken(null);\n    this.setid(null)\n    this.setAuthenticated(false);\n    this.deRegisterLogoutTimer();\n    this.clearStorage();\n  }\n  \n  saveAuthLocally(data:any) {\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('expireAt', data.expireAt.toString());\n    localStorage.setItem('userId', data.userId)\n  }\n\n  getAuthLocally() {\n    return {\n      token: localStorage.getItem('token'),\n      expireAt: new Date(localStorage.getItem('expireAt')),\n      userId : localStorage.getItem('userId')\n    }\n  }\n\n  clearStorage() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expireAt');\n    localStorage.removeItem('userId');\n  }\n\n  autoLogin() {\n    const token = this.getAuthLocally().token;\n    const expireAt = this.getAuthLocally().expireAt;\n\n    if(token && expireAt) {\n      console.log(\"Doing auto login...\");\n      const now = new Date();\n      const expiryTime = expireAt.getTime() - now.getTime();\n      console.log()\n      if(expiryTime > 0) {\n        this.setAuthenticated(true);\n        this.setToken(token);\n        this.deRegisterLogoutTimer();\n        this.registerLogoutTimer(expiryTime/1000);\n      }\n    }\n  }\n\n  postLoginActivity(result){\n    this.setToken(result.token)\n      this.setAuthenticated(true)\n\n      this.setid(result.userId)    /* Written By me */\n      \n      const now = new Date();\n      const expireAt = new Date(now.getTime() + result.expiresIn * 1000);\n\n      const authobj = {\n        token : result.token,\n        expireAt : expireAt,\n        userId : result.userId\n      }\n      this.saveAuthLocally(authobj);\n      console.log(\"Token will expires at: \" + expireAt);\n\n      this.registerLogoutTimer(result.expiresIn);\n      this.notifier.notify('Success','Login Succesfull..')\n  }\n\n  registerLogoutTimer(expiresIn: number) {\n    console.log(\"Logout will occurs in : \"+ expiresIn * 1000)\n    this.timerHandler = setTimeout(() => {\n      this.onLogout();\n    }, expiresIn * 1000);\n  }\n  deRegisterLogoutTimer() {\n    clearTimeout(this.timerHandler);\n  }\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorPopupComponent } from '../error-popup/error-popup.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error : HttpErrorResponse) => {\r\n        // console.log(\"Error Catched: \" + JSON.stringify(error));\r\n        this.dialog.open(ErrorPopupComponent, {data: error, height: '200px',\r\n        width: '300px'});\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}","import { auth } from './../auth.model';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false\n\n\n  constructor(private authService:AuthService,private router : Router, private notifier : NotifierService) { }\n\n  ngOnInit(): void {\n        \n  }\n  onLogin(form: NgForm) {\n  \n    if(form.invalid){\n      return \n    } \n      this.isLoading=true \n      this.authService.onLogin(form.value.email, form.value.password).subscribe(result => {\n      console.log(result)\n      this.authService.postLoginActivity(result)\n      \n      this.router.navigate(['/student']);\n    }, error => {\n      this.isLoading = false;\n    })\n    form.resetForm()\n  }\n\n}\n","<mat-progress-bar *ngIf=\"isLoading\"></mat-progress-bar>\n<notifier-container></notifier-container>\n<mat-card class=\"card-container\">\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n    <mat-card-subtitle style=\"font-weight: bold ;text-align: center;\">Login</mat-card-subtitle>\n    <mat-form-field>\n      <input\n      type=\"email\"\n      name=\"email\"\n      ngModel\n      matInput\n      placeholder=\"E-mail\"\n      required\n      email\n      #name=\"ngModel\"\n      >\n      <mat-error *ngIf=\"name.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      name=\"password\"\n      ngModel\n      matInput\n      placeholder=\"Password\"\n      required\n      #password=\"ngModel\"\n      >\n      <mat-error *ngIf=\"password.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <mat-card-actions>\n      <button mat-raised-button type=\"submit\">Login</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout-page',\n  templateUrl: './logout-page.component.html',\n  styleUrls: ['./logout-page.component.css']\n})\nexport class LogoutPageComponent implements OnInit {\n\n  constructor( private authService : AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.onLogout();\n  }\n}\n","<h1 style=\"text-align: center; margin-top: 250px;\" >Logout Occurs...Click Below Link to Login</h1>\n<div  style=\"margin-left: 720px;\">\n\n    <a style=\"text-align: center;\" mat-raised-button color=\"primary\" [routerLink]=\"['/login']\">Login</a>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  isLoading = false;\n  constructor(private authService: AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n    \n  }\n  onSignUp(form: NgForm) {\n    if(form.invalid) {\n      return\n    }\n\n    console.log(form.value)\n    const email = form.value.email\n    const pass = form.value.password\n    this.authService.doSignUp(email,pass).subscribe(data => {\n      console.log(data)\n      this.authService.onLogin(email,pass).subscribe(result => {\n        this.authService.postLoginActivity(result)\n        this.router.navigate(['/students']);\n      })\n    });\n    form.resetForm()\n  }\n\n}\n","<mat-progress-bar *ngIf=\"isLoading\"></mat-progress-bar>\n<mat-card class=\"card-container\">\n  <form (submit)=\"onSignUp(signUpForm)\" #signUpForm=\"ngForm\">\n    <mat-card-subtitle style=\"font-weight: bold; text-align: center;\">Sign Up</mat-card-subtitle>\n    <mat-form-field>\n      <input\n      type=\"email\"\n      name=\"email\"\n      ngModel\n      matInput\n      placeholder=\"E-mail\"\n      required\n      email\n      #name=\"ngModel\"\n      >\n      <mat-error *ngIf=\"name.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      name=\"password\"\n      ngModel\n      matInput\n      placeholder=\"Password\"\n      required\n      #password=\"ngModel\"\n      >\n      <mat-error *ngIf=\"password.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <mat-card-actions>\n      <button mat-raised-button type=\"submit\">Sign Up</button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutocompleteComponent implements OnInit {\n\n  myControl = new FormControl();\n  \n  options: string[] = ['One', 'Two', 'Three'];\n  \n  filteredOptions: Observable<string[]>;\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),map(value => this._filter(value))\n    );\n  }\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  \n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n           placeholder=\"Pick one\"\n           aria-label=\"Number\"\n           matInput\n           [formControl]=\"myControl\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n        {{option}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box',\n  templateUrl: './check-box.component.html',\n  styleUrls: ['./check-box.component.css']\n})\nexport class CheckBoxComponent implements OnInit {\n  checked = true;\n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n\n}\n","<mat-checkbox>Check me!</mat-checkbox>\r\n<br>\r\n<br>\r\n<mat-checkbox [(ngModel)]=\"checked\">Checked</mat-checkbox>  ","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-drop-down-menu',\n  templateUrl: './drop-down-menu.component.html',\n  styleUrls: ['./drop-down-menu.component.css']\n})\nexport class DropDownMenuComponent implements OnInit {\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  disableSelect = new FormControl(false);\n}\n","\n<!--\n<mat-form-field>\n    <mat-label>Choose an option</mat-label>\n    <select matNativeControl [disabled]=\"disableSelect.value\">\n      <option value=\"\" selected></option>\n      <option value=\"volvo\">Volvo</option>\n      <option value=\"saab\"  >Saab</option>\n      <option value=\"mercedes\">Mercedes</option>\n      <option value=\"audi\">Audi</option>\n    </select>\n  </mat-form-field>-->\n<h4>Basic mat-select</h4>\n<mat-form-field>\n  <mat-label>Favorite food</mat-label>\n  <mat-select>\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n      {{food.viewValue}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-popup',\n  templateUrl: './error-popup.component.html',\n  styleUrls: ['./error-popup.component.css']\n})\nexport class ErrorPopupComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n    console.log(\"Error Config: \" + JSON.stringify(data))\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3> Error </h3>\n<p>{{data.error.message}}</p>\n<a *ngIf=\"data.status === 404\" mat-dialog-close routerLink=\"/signup\">Sign Up</a>\n<br/>\n<br/>\n<button mat-button mat-dialog-close>Close</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-form-basics',\n  templateUrl: './login-form-basics.component.html',\n  styleUrls: ['./login-form-basics.component.css']\n})\nexport class LoginFormBasicsComponent implements OnInit {\n   namee='';\n   email='';\n   address='';\n   number='';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onButtonClicked()\n  {\n    \n    console.log(\"Name : \"+this.namee+\"\\nEmail :\"+this.email+\"\\nNumber : \"+this.number+\"\\nAddress : \"+this.address)\n    window.alert(\"Name : \"+this.namee+\"\\nEmail :\"+this.email+\"\\nNumber : \"+this.number+\"\\nAddress : \"+this.address)\n  }\n\n}\n","<p><br></p>\n<h1 style=\"text-align: center; font-size: 200%;\">Login Form </h1>\n<div style=\"text-align: center;\">\n    <br><br>\n    <p style=\"color: mediumblue;\">Enter Name : <input type=\"text\" [(ngModel)]=\"namee\" ></p>\n    <p style=\"color: mediumblue;\" >You have entered : {{namee}}</p>\n    <p style=\"color: red;\">Enter Email : <input type=\"text\" [(ngModel)]=\"email\" ></p>\n    <p style=\"color: red;\">You have entered : {{email}} </p>\n    <p style=\"color: firebrick;\">Enter Number : <input type=\"text\" [(ngModel)]=\"number\" ></p>\n    <p style=\"color: firebrick;\">You have entered : {{number}} </p>\n    <p style=\"color: fuchsia;\">Enter Address : <input type=\"text\" [(ngModel)]=\"address\" ></p>\n    <p style=\"color: fuchsia;\">You have entered : {{address}} </p>\n    <button (click) = \"onButtonClicked()\" style=\"color:yellow; background-color: green; font-size: 150%;\" > Submit</button>\n</div>\n<!--\n<form>\n    <div style=\"text-align: center;\">\n        <table align=\"center\">\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Name :</label>\n                </td>\n    \n                <td>\n                    \n                   \n                   \n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Email :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Email\"  >\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Number :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Number\">\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <p></p>\n                    <label style=\"color:crimson;\"> Address :</label>\n                </td>\n                <td>\n                    <p></p>\n                    <input type=\"text\" placeholder=\"Address\" >\n                </td>\n            </tr>\n        </table>\n    </div>\n</form>\n-->\n<!--<br><br>\n        <label style=\"color:crimson;\"> Name :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> Email :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> Number :</label>\n        <input type=\"text\" >\n        <br><br>\n        <label style=\"color:crimson;\"> address :</label>\n        <input type=\"text\" >\n        <br><br>-->","import { environment } from '../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { student } from './sudent';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root' // This service will be available from root scope it means any component can inject it\n})\nexport class ManageNamesService {\n  //names = ['Jayesh', 'Kod Factory', 'Marwadi', 'Rajkot', 'from service'];\n\n  \n  constructor(private http: HttpClient) { }\n\n  getNames() : Observable<student[]> {\n    //return this.names;\n    return this.http.get<student[]>(environment.API_BASE_PATH+'student')\n  }\n\n  getStudents(currPageSize,currPageIndex){\n    const url = environment.API_BASE_PATH+'listStudents?pagesize='+currPageSize+'&pageindex='+currPageIndex\n    console.log(url)\n    return this.http.get<{message: string, students:student[], maxStudents : number}>(url)\n  }\n\n  addStudents(name,branch,email){\n    const studentObj : student = {\n      id: null,\n      name: name,\n      branch: branch,\n      email: email,\n      creator : null    /*written by me */\n    }\n    return this.http.post(environment.API_BASE_PATH+'addStudent', studentObj);\n  }\n\n  deleteStudent(id)\n  {\n      return this.http.delete(environment.API_BASE_PATH+id)\n  }\n  updateStudent(id, name, branch,email) {\n    const std = {\n      name: name,\n      branch: branch,\n      email:email\n    }\n    return this.http.put(environment.API_BASE_PATH+id, std)\n  }\n  getstudent(id){\n    return this.http.get<student>(environment.API_BASE_PATH+id)\n  }\n// updateNames(name) {\n   // this.names.push(name)\n  //}\n}","import { Component, OnInit } from '@angular/core';\nimport { student } from '../sudent';\nimport { ManageNamesService } from '../manage-names.service';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router'\n\n\n@Component({\n  selector: 'app-new-student',\n  templateUrl: './new-student.component.html',\n  styleUrls: ['./new-student.component.css']\n})\nexport class NewStudentComponent implements OnInit {\n  \n  name=\"\";\n  branch=\"\";\n  email=\"\";\n  isShow=false;\n  mode='create'\n  stdId = \"\"\n  std:student\n  \n  constructor(private  nameService: ManageNamesService,private route : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(data =>{\n      if(data.has('stdId')){\n          this.mode='edit'\n          this.stdId = data.get('stdId');\n          this.nameService.getstudent(this.stdId).subscribe(data => {\n            this.std=data\n          })\n      }else{\n        this.mode='create'\n        this.stdId= null\n      }\n    })\n  }\n  onSave(studentForm : NgForm) {\n    \n    if (studentForm.invalid) {\n      return\n    }\n    this.isShow=true;\n\n    if(this.mode == 'create') {\n      this.nameService.addStudents(studentForm.value.name, studentForm.value.branch,studentForm.value.email).subscribe(response => {\n        console.log(\"Api Success: \"+ JSON.stringify(response))\n      });\n    } else {\n      this.nameService.updateStudent(this.stdId, studentForm.value.name, studentForm.value.branch,studentForm.value.email).subscribe(response => {\n        console.log(\"Update Api Success: \"+ JSON.stringify(response))\n      });\n    }\n     setTimeout(() => \n      {\n          this.isShow = false\n      },\n      1000);\n    studentForm.resetForm()\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf = \"isShow\" ></mat-progress-bar>\n<mat-card class=\"card-container\">\n    <form (submit)=\"onSave(studentForm)\" #studentForm=\"ngForm\">\n      <mat-card-header class=\"card-header\">\n        <div mat-card-avatar class=\"header-avatar\"></div>\n        <mat-card-subtitle>Registration</mat-card-subtitle>\n      </mat-card-header>\n      <mat-form-field>\n        <input\n        type=\"text\"\n        name=\"name\"\n        [ngModel]=\"std?.name\"\n        matInput\n        placeholder=\"Enter name\"\n        required\n        #name=\"ngModel\"\n        >\n        <mat-error *ngIf=\"name.invalid\">Name is required</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        type=\"text\"\n        name=\"branch\"\n        [ngModel]=\"std?.branch\"\n        matInput\n        placeholder=\"Enter branch\"\n        required\n        #branch=\"ngModel\"\n        >\n        <mat-error *ngIf=\"branch.invalid\">branch is required</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input\n        type=\"email\"\n        name=\"email\"\n        [ngModel]=\"std?.email\"\n        matInput\n        placeholder=\"Enter email\"\n        required\n        email\n        #email=\"ngModel\"\n        >\n        <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n      </mat-form-field>\n      <mat-card-actions>\n        <button mat-raised-button type=\"submit\">Save</button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.css']\n})\nexport class RadioButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  favoriteSeason: string='Summer';\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n","<label id=\"example-radio-group-label\">Pick your favorite season</label>\n<mat-radio-group\n  aria-labelledby=\"example-radio-group-label\"\n  class=\"example-radio-group\"\n  [(ngModel)]=\"favoriteSeason\">\n  <mat-radio-button  class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\n    {{season}}\n  </mat-radio-button>\n</mat-radio-group>\n<div>Your favorite season is: {{favoriteSeason}}</div>","import { Component, OnInit } from '@angular/core';\nimport { ManageNamesService } from '../manage-names.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from '../authentication/auth.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  students = [];\n  panelOpenState = false;\n  isDel=false;\n  istr=true;\n\n  private user_authid_login: string\n  private authen : boolean\n  constructor(private nameService: ManageNamesService,public dialog: MatDialog,private authService: AuthService) { }\n  \n\n  pageLength = 1;\n  currPageSize = 2;\n  pageOptions = [1,2,5,10]\n  currPageIndex=0\n\n\n\n  ngOnInit(): void {\n\n      this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n        console.log(JSON.stringify(data))\n        this.students=data.students;\n        this.pageLength=data.maxStudents;\n        console.log(this.pageLength);\n      });\n  }\n\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if(result==true){\n        this.onDelete(id)\n      }else{\n        this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n        this.students=data.students;\n        this.pageLength=data.maxStudents;\n        });\n      }\n    });\n  }\n  \n\n\n  onDelete(id)\n  {\n    this.isDel=true;\n    this.nameService.deleteStudent(id).subscribe(data => { \n      console.log(data)\n      setTimeout(() => \n      {\n          this.isDel = false\n      },\n      1000);\n      this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n          this.students=data.students;\n        this.pageLength=data.maxStudents;\n        \n        });\n    });\n    \n  }\n  onPageChange(pageEvn: PageEvent) {\n    console.log(pageEvn);\n    this.currPageSize=pageEvn.pageSize\n    this.currPageIndex=pageEvn.pageIndex\n    this.nameService.getStudents(this.currPageSize,this.currPageIndex+1).subscribe(data => {\n      this.students=data.students;\n      this.pageLength=data.maxStudents;\n    });\n\n    \n    /*length: 10\n    pageIndex: 1\n    pageSize: 2\n    previousPageIndex: 0*/\n  }\n  checkAuth() {\n    return this.authService.getAuthenticated();\n    \n  }\n\n  checkcreatorid_studentid(student_creator_id){\n    this.user_authid_login = this.authService.getid();    /* written by me */\n\n    /* if and else condition written by me */\n\n    if((this.user_authid_login===student_creator_id)){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n}\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog {}","<mat-spinner *ngIf = \"isDel\"   mode=\"indeterminate\" style=\"margin: auto; margin-bottom: 10px;\"  ></mat-spinner>\n\n\n<div *ngIf = \"students.length > 0 ; else noData\">\n  <mat-accordion>\n  <mat-expansion-panel style=\"margin-bottom: 10px; margin-top: 10px;\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"align-content: center;\">\n        Data Of Students\n      </mat-panel-title>\n      <mat-panel-description>\n        <p *ngIf=\"panelOpenState; else elseBlock\"></p>\n        <ng-template #elseBlock> </ng-template>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n  <mat-accordion>\n    <mat-expansion-panel style=\"margin-bottom: 10px;\" *ngFor=\"let item of students\" (opened)=\"panelOpenState = true\"\n                                  (closed)=\"panelOpenState = false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Student : {{item.name}}\n        </mat-panel-title>\n        <mat-panel-description>\n          <p *ngIf=\"panelOpenState; else elseBlock\">Click to Hide {{item.name}} data</p>\n          <ng-template #elseBlock>Click here to see {{item.name}} data</ng-template>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Name: {{item.name}}</p>\n      <p>Branch: {{item.branch}}</p>\n      <p>Email : {{item.email}}</p>\n      <mat-action-row *ngIf=\"checkAuth() &&  checkcreatorid_studentid(item.creator)\">\n        <div class=\"example-button-container\" style=\"margin-right:40%;\" >\n          <button mat-fab color=\"accent\" [routerLink]=\"['/edit',item._id]\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;margin-right: 10%;\">\n            <mat-icon> border_color</mat-icon>\n          </button>\n          <!--\n          <button (click)=\"onDelete(item._id)\"  mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;\">\n            <mat-icon>delete</mat-icon>\n          </button>\n          -->\n          <button mat-button (click)=\"openDialog(item._id)\"  mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" style=\"height: 90%;  width: 30%;\">  \n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n      </mat-action-row>\n    </mat-expansion-panel>\n    <mat-paginator\n    [length]=\"pageLength\"\n    [pageSize]=\"currPageSize\"\n    [pageSizeOptions]=\"pageOptions\"\n    (page)=\"onPageChange($event)\">\n  </mat-paginator>\n  </mat-accordion>\n  </mat-expansion-panel>\n  \n  </mat-accordion>\n</div>\n<ng-template #noData>\n  <h1 style=\"text-align: center; margin-top: 250px;\"> Do Not Have Any Data!!!Please Insert It First... </h1>\n</ng-template>","<h2 mat-dialog-title>Confirm This Page</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <h3>Want To Delete  This Student Data </h3>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>Cancel</button>\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Delete</button>\r\n</mat-dialog-actions>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_BASE_PATH : \"https://hit-23-node-crm-backend.herokuapp.com/api/\",\n  AUTH_BASE_PATH :\"https://hit-23-node-crm-backend.herokuapp.com/auth/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}